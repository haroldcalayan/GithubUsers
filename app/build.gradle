plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

apply from: "config.gradle"
apply from: "dependencies.gradle"

def secretkeyPropertiesFile = file("secretkey.properties")
def secretkeyProperties = new Properties()
secretkeyProperties.load(new FileInputStream(secretkeyPropertiesFile))

android {
    compileSdkVersion configs.compileSdkVersion
    buildToolsVersion configs.buildToolsVersion

    defaultConfig {
        applicationId configs.applicationId
        minSdkVersion configs.minSdkVersion
        targetSdkVersion configs.targetSdkVersion
        versionCode configs.versionCode
        versionName configs.versionName
        buildConfigField "String", "DB_NAME", DATABASE_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file('keystore/release.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            manifestPlaceholders = [enableCrashReporting: "false"]
            buildConfigField "String", "BASE_APP_URL", DEV_BASE_APP_URL
            resValue "string", "API_KEY", secretkeyProperties['DEV_API_KEY']
        }

        staging {
            debuggable true
            minifyEnabled false
            zipAlignEnabled false
            manifestPlaceholders = [enableCrashReporting: "true"]
            buildConfigField "String", "BASE_APP_URL", STAGE_BASE_APP_URL
            resValue "string", "API_KEY", secretkeyProperties['STAGE_API_KEY']
        }

        release {
            debuggable false
            minifyEnabled true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [enableCrashReporting: "true"]
            buildConfigField "String", "BASE_APP_URL", PROD_BASE_APP_URL
            resValue "string", "API_KEY", secretkeyProperties['PROD_API_KEY']
        }
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            res.srcDirs = [
                    'src/main/res/layouts/profile',
                    'src/main/res/layouts/user',
                    'src/main/res/layouts/splash',
                    'src/main/res/layouts',

                    'src/main/res/drawable/profile',
                    'src/main/res/drawable/user',
                    'src/main/res/drawable/splash',
                    'src/main/res/drawable',

                    'src/main/res/layout',
                    'src/main/res'
            ]
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = outputFileName.replace("app", "GithubUsers-v" + defaultConfig.versionName)
        }
    }
}

dependencies {

    // Kotlin
    implementation kotlinDependency
    implementation kotlinXCoroutine

    // AndroidX
    implementation androidXDependencies.appCompat
    implementation androidXDependencies.KTX
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation androidXDependencies.constraintLayout
    implementation androidXDependencies.lifecycleExtension
    implementation androidXDependencies.lifecycleLiveData
    implementation androidXDependencies.lifecycleRuntime
    implementation androidXDependencies.lifecycleViewModel

    // Material
    implementation materialDependency

    // Timber
    implementation timberDependency

    // Retrofit
    implementation retrofitDependencies.retrofit
    implementation retrofitDependencies.converterGson
    implementation retrofitCallToLiveDataAdapterDependency

    // OkHttp
    implementation okHttpDependency

    // Room
    implementation roomDependencies.roomRuntime
    implementation roomDependencies.roomKTX
    kapt roomDependencies.roomCompiler

    // Dagger
    implementation daggerDependencies.dagger
    kapt daggerDependencies.compiler

    // Picasso
    implementation picassoDependency

    // Test
    testImplementation testDependencies.junit
    androidTestImplementation testDependencies.extJunit
    androidTestImplementation testDependencies.espresso
}